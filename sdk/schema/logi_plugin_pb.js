// @generated by protoc-gen-es v1.1.1 with parameter "target=js"
// @generated from file logi_plugin.proto (package logi.plugin.protocol, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, proto3 } from "@bufbuild/protobuf";

/**
 * wrapper around messages
 *
 * @generated from message logi.plugin.protocol.Envelope
 */
export const Envelope = proto3.makeMessageType(
  "logi.plugin.protocol.Envelope",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 2, name: "message", kind: "message", T: Any, opt: true },
    { no: 3, name: "response", kind: "message", T: ResponseInfo, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.ResponseInfo
 */
export const ResponseInfo = proto3.makeMessageType(
  "logi.plugin.protocol.ResponseInfo",
  () => [
    { no: 1, name: "code", kind: "enum", T: proto3.getEnumType(ResponseInfo_Code) },
    { no: 2, name: "what", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from enum logi.plugin.protocol.ResponseInfo.Code
 */
export const ResponseInfo_Code = proto3.makeEnum(
  "logi.plugin.protocol.ResponseInfo.Code",
  [
    {no: 0, name: "INVALID"},
    {no: -1, name: "INVALID_ARG"},
    {no: -2, name: "INVALID_DEVICE"},
    {no: -3, name: "NO_SUCH_PATH"},
    {no: -4, name: "CANCELLED"},
    {no: -5, name: "NOT_IMPLEMENTED"},
    {no: -6, name: "INVALID_VERB"},
    {no: -7, name: "NOT_READY"},
    {no: -8, name: "FAULTED"},
    {no: -9, name: "UNREACHABLE"},
    {no: -10, name: "UNAUTHORIZED"},
    {no: -11, name: "DUPLICATE_NAME"},
    {no: -12, name: "NOT_FOUND"},
    {no: -13, name: "EXCEPTION"},
    {no: -14, name: "CONFLICT"},
    {no: 1, name: "SUCCESS"},
  ],
);

/**
 * / handshake message
 *
 * @generated from message logi.plugin.protocol.PluginHello
 */
export const PluginHello = proto3.makeMessageType(
  "logi.plugin.protocol.PluginHello",
  () => [
    { no: 1, name: "plugin_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "plugin_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "plugin_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "protocol_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ],
);

/**
 * / handshake message
 *
 * @generated from message logi.plugin.protocol.ManagerHello
 */
export const ManagerHello = proto3.makeMessageType(
  "logi.plugin.protocol.ManagerHello",
  () => [
    { no: 1, name: "manager_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "options_version", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "ghub_version", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "protocol_version", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 5, name: "language_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.RetryAfter
 */
export const RetryAfter = proto3.makeMessageType(
  "logi.plugin.protocol.RetryAfter",
  () => [
    { no: 1, name: "interval", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * / Heartbeat message to plugin
 *
 * @generated from message logi.plugin.protocol.Ping
 */
export const Ping = proto3.makeMessageType(
  "logi.plugin.protocol.Ping",
  [],
);

/**
 * / Heartbeat response from plugin
 *
 * @generated from message logi.plugin.protocol.Pong
 */
export const Pong = proto3.makeMessageType(
  "logi.plugin.protocol.Pong",
  [],
);

/**
 * @generated from message logi.plugin.protocol.TriggerAction
 */
export const TriggerAction = proto3.makeMessageType(
  "logi.plugin.protocol.TriggerAction",
  () => [
    { no: 1, name: "action_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "configuration", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.ReleaseAction
 */
export const ReleaseAction = proto3.makeMessageType(
  "logi.plugin.protocol.ReleaseAction",
  () => [
    { no: 1, name: "action_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "configuration", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.VisibilityChangedList
 */
export const VisibilityChangedList = proto3.makeMessageType(
  "logi.plugin.protocol.VisibilityChangedList",
  () => [
    { no: 1, name: "visibility", kind: "message", T: VisibilityChanged, repeated: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.VisibilityChanged
 */
export const VisibilityChanged = proto3.makeMessageType(
  "logi.plugin.protocol.VisibilityChanged",
  () => [
    { no: 1, name: "control_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "action_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "visible", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "configuration", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.Settings
 */
export const Settings = proto3.makeMessageType(
  "logi.plugin.protocol.Settings",
  () => [
    { no: 1, name: "setting_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "setting_value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.SettingsRequest
 */
export const SettingsRequest = proto3.makeMessageType(
  "logi.plugin.protocol.SettingsRequest",
  () => [
    { no: 1, name: "setting_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.LogEvent
 */
export const LogEvent = proto3.makeMessageType(
  "logi.plugin.protocol.LogEvent",
  () => [
    { no: 1, name: "log_level", kind: "enum", T: proto3.getEnumType(LogEvent_LOG_LEVEL) },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from enum logi.plugin.protocol.LogEvent.LOG_LEVEL
 */
export const LogEvent_LOG_LEVEL = proto3.makeEnum(
  "logi.plugin.protocol.LogEvent.LOG_LEVEL",
  [
    {no: 0, name: "TRACE"},
    {no: 1, name: "DEBUG"},
    {no: 2, name: "INFO"},
    {no: 3, name: "WARNING"},
    {no: 4, name: "ERROR"},
  ],
);

/**
 * / From PM to Plugin
 * / plugin can optionally respond with AnalogControlStatus
 *
 * @generated from message logi.plugin.protocol.UpdateAnalogControl
 */
export const UpdateAnalogControl = proto3.makeMessageType(
  "logi.plugin.protocol.UpdateAnalogControl",
  () => [
    { no: 1, name: "analog_control_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "configuration", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, oneof: "update_type" },
    { no: 5, name: "delta", kind: "scalar", T: 2 /* ScalarType.FLOAT */, oneof: "update_type" },
  ],
);

/**
 * / From PM to Plugin
 *
 * @generated from message logi.plugin.protocol.GetAnalogControlValue
 * @deprecated
 */
export const GetAnalogControlValue = proto3.makeMessageType(
  "logi.plugin.protocol.GetAnalogControlValue",
  () => [
    { no: 1, name: "analog_control_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "configuration", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * / From PM to Plugin
 *
 * @generated from message logi.plugin.protocol.GetActionStatus
 */
export const GetActionStatus = proto3.makeMessageType(
  "logi.plugin.protocol.GetActionStatus",
  () => [
    { no: 1, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "configuration", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * Response to VisibilityChangedList
 *
 * @generated from message logi.plugin.protocol.AnalogControlStatusList
 * @deprecated
 */
export const AnalogControlStatusList = proto3.makeMessageType(
  "logi.plugin.protocol.AnalogControlStatusList",
  () => [
    { no: 1, name: "statuses", kind: "message", T: AnalogControlStatus, repeated: true },
  ],
);

/**
 * Response to VisibilityChanged or GetAnalogControlValue
 *
 * @generated from message logi.plugin.protocol.AnalogControlStatus
 * @deprecated
 */
export const AnalogControlStatus = proto3.makeMessageType(
  "logi.plugin.protocol.AnalogControlStatus",
  () => [
    { no: 1, name: "analog_control_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "analog_control_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "min_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "max_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 5, name: "current_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 6, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "image", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "image_type", kind: "enum", T: proto3.getEnumType(AnalogControlStatus_IMAGE_TYPE), opt: true },
    { no: 10, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "error_code", kind: "enum", T: proto3.getEnumType(ResponseInfo_Code), opt: true },
  ],
);

/**
 * @generated from enum logi.plugin.protocol.AnalogControlStatus.IMAGE_TYPE
 * @deprecated
 */
export const AnalogControlStatus_IMAGE_TYPE = proto3.makeEnum(
  "logi.plugin.protocol.AnalogControlStatus.IMAGE_TYPE",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "BASE64"},
    {no: 2, name: "FILE"},
  ],
);

/**
 * Response to TriggerAction from Plugin Manager
 *
 * @generated from message logi.plugin.protocol.ActionCellStatus
 * @deprecated
 */
export const ActionCellStatus = proto3.makeMessageType(
  "logi.plugin.protocol.ActionCellStatus",
  () => [
    { no: 1, name: "action_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "image", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 5, name: "image_type", kind: "enum", T: proto3.getEnumType(ActionCellStatus_IMAGE_TYPE), opt: true },
    { no: 6, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 7, name: "error_code", kind: "enum", T: proto3.getEnumType(ResponseInfo_Code), opt: true },
  ],
);

/**
 * @generated from enum logi.plugin.protocol.ActionCellStatus.IMAGE_TYPE
 * @deprecated
 */
export const ActionCellStatus_IMAGE_TYPE = proto3.makeEnum(
  "logi.plugin.protocol.ActionCellStatus.IMAGE_TYPE",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "BASE64"},
    {no: 2, name: "FILE"},
  ],
);

/**
 * Response to VisibilityChangedList
 *
 * @generated from message logi.plugin.protocol.ActionStatusList
 */
export const ActionStatusList = proto3.makeMessageType(
  "logi.plugin.protocol.ActionStatusList",
  () => [
    { no: 1, name: "statuses", kind: "message", T: ActionStatus, repeated: true },
  ],
);

/**
 * Response to VisibilityChanged, GetActionStatus, TriggerAction
 *
 * @generated from message logi.plugin.protocol.ActionStatus
 */
export const ActionStatus = proto3.makeMessageType(
  "logi.plugin.protocol.ActionStatus",
  () => [
    { no: 1, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "min_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 4, name: "max_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 5, name: "current_value", kind: "scalar", T: 2 /* ScalarType.FLOAT */, opt: true },
    { no: 6, name: "active", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 7, name: "text", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "image", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "image_type", kind: "enum", T: proto3.getEnumType(ActionStatus_IMAGE_TYPE), opt: true },
    { no: 10, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "error_code", kind: "enum", T: proto3.getEnumType(ResponseInfo_Code), opt: true },
  ],
);

/**
 * @generated from enum logi.plugin.protocol.ActionStatus.IMAGE_TYPE
 */
export const ActionStatus_IMAGE_TYPE = proto3.makeEnum(
  "logi.plugin.protocol.ActionStatus.IMAGE_TYPE",
  [
    {no: 0, name: "NONE"},
    {no: 1, name: "BASE64"},
    {no: 2, name: "FILE"},
  ],
);

/**
 * @generated from message logi.plugin.protocol.PluginActionConfigurationSchemeRequest
 */
export const PluginActionConfigurationSchemeRequest = proto3.makeMessageType(
  "logi.plugin.protocol.PluginActionConfigurationSchemeRequest",
  () => [
    { no: 1, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "action_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.UserInfo
 */
export const UserInfo = proto3.makeMessageType(
  "logi.plugin.protocol.UserInfo",
  () => [
    { no: 1, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "printed_name", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "icon", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.UserInfoList
 */
export const UserInfoList = proto3.makeMessageType(
  "logi.plugin.protocol.UserInfoList",
  () => [
    { no: 1, name: "user_info", kind: "message", T: UserInfo, repeated: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.GetUserInfoList
 */
export const GetUserInfoList = proto3.makeMessageType(
  "logi.plugin.protocol.GetUserInfoList",
  [],
);

/**
 * @generated from message logi.plugin.protocol.InitLogin
 */
export const InitLogin = proto3.makeMessageType(
  "logi.plugin.protocol.InitLogin",
  () => [
    { no: 1, name: "redirect_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.Logout
 */
export const Logout = proto3.makeMessageType(
  "logi.plugin.protocol.Logout",
  () => [
    { no: 1, name: "username", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.PluginActionConfigurationSchemeResponse
 */
export const PluginActionConfigurationSchemeResponse = proto3.makeMessageType(
  "logi.plugin.protocol.PluginActionConfigurationSchemeResponse",
  () => [
    { no: 1, name: "login_required", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
    { no: 2, name: "selected_username", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "users", kind: "message", T: UserInfo, repeated: true },
    { no: 4, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "action_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "json_schema", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "ui_schema", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 99, name: "loging_required", kind: "scalar", T: 8 /* ScalarType.BOOL */, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.PluginActionConfigurationResponse
 */
export const PluginActionConfigurationResponse = proto3.makeMessageType(
  "logi.plugin.protocol.PluginActionConfigurationResponse",
  () => [
    { no: 1, name: "action_instance_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "action_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "form_result", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.SetData
 */
export const SetData = proto3.makeMessageType(
  "logi.plugin.protocol.SetData",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.GetData
 */
export const GetData = proto3.makeMessageType(
  "logi.plugin.protocol.GetData",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.WipeData
 */
export const WipeData = proto3.makeMessageType(
  "logi.plugin.protocol.WipeData",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message logi.plugin.protocol.SavedData
 */
export const SavedData = proto3.makeMessageType(
  "logi.plugin.protocol.SavedData",
  () => [
    { no: 1, name: "key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "value", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message logi.plugin.protocol.OauthResponse
 */
export const OauthResponse = proto3.makeMessageType(
  "logi.plugin.protocol.OauthResponse",
  () => [
    { no: 1, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

