syntax = "proto3";

import "google/protobuf/any.proto";

package test;

message Envelope
{
  uint32 id = 1;
  google.protobuf.Any message = 2;
  optional ResponseInfo response = 3;
}

message Code
{
  enum ResCode
  {
    INVALID = 0;
    INVALID_ARG = -1;
    INVALID_DEVICE = -2;
    NO_SUCH_PATH = -3;
    CANCELLED = -4;
    NOT_IMPLEMENTED = -5;
    INVALID_VERB = -6;
    NOT_READY = -7;
    FAULTED = -8;
    UNREACHABLE = -9;
    UNAUTHORIZED = -10;
    DUPLICATE_NAME = -11;
    NOT_FOUND = -12;
    EXCEPTION = -13;
    CONFLICT = -14;
    SUCCESS = 1;
  }
}

message ResponseInfo
{
  Code result = 1;
  string what = 2;
}

message PluginHello
{
  string plugin_id = 1;
  string plugin_code = 2;
  string plugin_version = 3;
  int32 protocol_version = 4;
}

message ManagerHello
{
  string manager_version = 1;
  optional string options_version = 2;
  optional string ghub_version = 3;
  int32 protocol_version = 4;
  string language_code = 5;
}

message Settings
{
  string setting_name = 1;
  string setting_value = 2;
}

message SettingsRequest
{
  string setting_name =1;
}

message LogEvent
{
  enum LOG_LEVEL
  {
    TRACE = 0;
    DEBUG = 1;
    INFO = 2;
    WARNING = 3;
    ERROR = 4;
  }
  LOG_LEVEL log_level = 1;
  string message = 2;
}

message AnalogControlStatus
{
  enum IMAGE_TYPE
  {
    NONE = 0;
    BASE64 = 1;
    FILE = 2;
  }
  string analog_control_id = 1;
  string analog_control_instance_id = 2;
  optional float min_value = 3;
  optional float max_value = 4;
  optional float current_value = 5;
  optional bool active = 6;
  optional string text = 7;
  optional string image = 8;
  optional IMAGE_TYPE image_type=9;
  optional string error = 10;
  optional Code error_code = 11;
}

message ActionCellStatus
{
  enum IMAGE_TYPE
  {
    NONE = 0;
    BASE64 = 1;
    FILE = 2;
  }
  string action_instance_id= 1;
  string action_id = 2;
  optional string text = 3;
  optional string image = 4;
  optional IMAGE_TYPE image_type=5;
  optional string error = 6;
  optional Code error_code = 7;
}

message Ping
{
}

message Pong
{
}

message RetryAfter
{
  int32 interval = 1;
}

message TriggerAction
{
  string action_instance_id = 1;
  string action_id = 2;
  optional string configuration = 3;
}

message ReleaseAction
{
  string action_instance_id= 1;
  string action_id =2;
  optional string configuration = 3;
}

message UpdateAnalogControl
{
  string analog_control_id = 1;
  string instance_id = 2;
  optional string configuration = 3;
  oneof update_type
  {
    float value = 4;
    float delta = 5;
  }
}

message GetAnalogControlValue
{
  string analog_control_id = 1;
  string instance_id = 2;
  optional string configuration = 3;
}

message VisibilityChanged
{
  string control_id = 1;
  string action_instance_id = 2;
  bool visible = 3;
  optional string configuration = 4;
}

message VisibilityChangedList
{
  repeated VisibilityChanged visibility = 1;
}

message AnalogControlStatusList
{
  repeated AnalogControlStatus statuses = 1;
}

message PluginActionConfigurationSchemeRequest
{
  string action_id = 1;
  string analog_control_id = 2;
  string action_instance_id = 3;
  optional string username = 4;
}

message UserInfo
{
  string username = 1;
  optional string printed_name = 2;
  optional string icon = 3;
}
message PluginActionConfigurationSchemeResponse
{
  optional bool login_required = 1;
  optional string selected_username = 2;
  repeated UserInfo users = 3;
  string action_id = 4;
  string analog_control_id = 5;
  string action_instance_id = 6;
  optional string json_schema = 7;
  optional string ui_schema = 8;
  optional bool loging_required = 99;
}

message PluginActionConfigurationResponse
{
  string action_instance_id = 1;
  string action_id = 2;
  string form_result = 3;
}

message InitLogin
{
  string redirect_url = 1;
}

message OauthResponse
{
  string state = 1;
  string token = 2;
  string url = 3;
}

message Logout
{
  string username = 1;
}

message GetUserInfoList
{
}

message UserInfoList
{
  repeated UserInfo user_info = 1;
}
